#
# Copyright 2016-2017 The Reaktivity Project
#
# The Reaktivity Project licenses this file to you under the Apache License,
# version 2.0 (the "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at:
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

property newServerAcceptRef ${nuklei:newReferenceId()} # external scope
property newServerConnectRef ${nuklei:newReferenceId()} # external scope

property route1Authorization 0x0001_000000000000L
property route2Authorization 0x0002_000000000000L

property nukleiUR00C ${nuklei:directory("target/nukleus-itests").controlCapacity(1024, 1024)}

property controlUR00C ${nukleiUR00C.control("example")}


connect await ROUTED_SERVER
        "agrona://stream/bidirectional"
        option agrona:reader ${agrona:broadcastReceiver(controlUR00C.controller)}
        option agrona:writer ${agrona:manyToOneWriter(controlUR00C.nukleus)}

connected

write 0x00000002
write ${controlUR00C.nextCorrelationId()}
write [0x00]
write [0x06] "source"
write ${newServerAcceptRef}
write [0x06] "target"
write ${newServerConnectRef}
write ${route1Authorization}
write 0
write flush

read 0x40000002
read ${controlUR00C.correlationId()}

write 0x00000002
write ${controlUR00C.nextCorrelationId()}
write [0x00]
write [0x06] "source"
write ${newServerAcceptRef}
write [0x06] "target"
write ${newServerConnectRef}
write ${route2Authorization}
write 0
write flush

read 0x40000002
read ${controlUR00C.correlationId()}

close
closed
